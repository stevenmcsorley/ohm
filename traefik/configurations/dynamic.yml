http:
  middlewares:
    websocket:
      headers:
        customRequestHeaders:
          X-Forwarded-Host: backend.stevenmcsorley.co.uk
          X-Forwarded-Proto: https
        customResponseHeaders:
          Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization
          Access-Control-Allow-Methods: GET, OPTIONS, PUT, POST, DELETE
          Access-Control-Allow-Origin: "*"

  routers:
    backend:
      rule: "Host(`backend.stevenmcsorley.co.uk`)"
      service: backend
      entryPoints:
        - websecure
      middlewares:
        - websocket
      tls:
        certResolver: dnsChallenge

    grafana:
      rule: "Host(`grafana.stevenmcsorley.co.uk`)"
      service: grafana
      entryPoints:
        - websecure
      tls:
        certResolver: dnsChallenge

    prometheus:
      rule: "Host(`prometheus.stevenmcsorley.co.uk`)"
      service: prometheus
      entryPoints:
        - websecure
      tls:
        certResolver: dnsChallenge

  services:
    backend:
      loadBalancer:
        servers:
          - url: "http://172.30.0.5:8080"
        passHostHeader: true

    grafana:
      loadBalancer:
        servers:
          - url: "http://172.30.0.2:3000"
        passHostHeader: true

    prometheus:
      loadBalancer:
        servers:
          - url: "http://172.30.0.6:9090"
        passHostHeader: true
