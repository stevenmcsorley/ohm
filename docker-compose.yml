version: '3.9'

services:
  traefik:
    image: traefik:v2.0
    restart: always
    container_name: traefik
    ports:
      - '80:80'
      - '443:443'
      - '8087:8080'
    command:
      - --api.insecure=false
      - --api.dashboard=false
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/dynamic.yml
      - --providers.docker.network=proxy
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dynamic.yml:/dynamic.yml
    networks:
      - proxy

  redis-server:
    image: redis:7.2.5
    networks:
      - proxy
      - backend

  redis-exporter:
    image: oliver006/redis_exporter:v1.61.0
    networks:
      - proxy
      - backend

  device-simulator:
    build:
      context: ./device-simulator
    networks:
      - proxy
      - backend

  backend-server:
    build:
      context: ./backend
    ports:
      - '8081:8080'
    networks:
      - proxy
      - backend
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=Host(`${BACKEND_HOST}`)'
      - 'traefik.http.routers.backend.entrypoints=web'
      - 'traefik.http.routers.backend-secure.entrypoints=websecure'
      - 'traefik.http.routers.backend-secure.tls=true'
      - 'traefik.http.services.backend.loadbalancer.server.port=8080'

  prometheus:
    image: prom/prometheus:v2.26.0
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.prometheus.rule=Host(`${PROMETHEUS_HOST}`)'
      - 'traefik.http.routers.prometheus.entrypoints=web'
      - 'traefik.http.services.prometheus.loadbalancer.server.port=9090'
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana-enterprise
    ports:
      - '3002:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=Host(`${GRAFANA_HOST}`)'
      - 'traefik.http.routers.grafana.entrypoints=web'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
    volumes:
      - grafana_data:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter:v1.1.2
    ports:
      - 9100:9100
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.node-exporter.rule=Host(`${NODE_EXPORTER_HOST}`)'
      - 'traefik.http.routers.node-exporter.entrypoints=web'
      - 'traefik.http.services.node-exporter.loadbalancer.server.port=9100'
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro

  web:
    build: .
    ports:
      - '8000:8000'
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.web.rule=Host(`${WEB_HOST}`)'
      - 'traefik.http.routers.web.entrypoints=web'
      - 'traefik.http.routers.web-secure.entrypoints=websecure'
      - 'traefik.http.routers.web-secure.tls=true'
      - 'traefik.http.services.web.loadbalancer.server.port=8000'
    networks:
      - proxy
      - backend

networks:
  proxy:
    external: true
  backend:
    external: true

volumes:
  prom_data:
  grafana_data:
